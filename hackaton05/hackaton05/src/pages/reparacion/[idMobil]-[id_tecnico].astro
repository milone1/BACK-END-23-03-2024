---
import Layout from "../../layouts/Layout.astro";

const { idMobil, id_tecnico } = Astro.params;

// localStorage.setItem('idMObil', idMobil);
---

<Layout title="Hachaton05">
  <section class="w-full h-auto grid place-items-center">
    <div
      id="card"
      class="w-full max-w-[450px] h-auto py-6 px-4 rounded-2xl grid place-items-center"
    >
      <h3>Estado de la revision del telefono</h3>

      <div class="">
        <h2 class="text-white">
          <span class="uppercase font-semibold">Estado:</span> En espera de autorizacion
        </h2>

        <h4 class="uppercase font-semibold text-white">
          Abono: <span id="abonoInicial"></span> s/
        </h4>
        <!-- <span id="abonoInicial"></span> -->
      </div>
    </div>
  </section>
</Layout>

<script>
import { Reparacion } from "../../models/ReparacionClass";
import { Tecnico } from "../../models/TecnicoClass";

  const $abonoInicial = document.getElementById("abonoInicial");

  const listMobil = JSON.parse(localStorage.getItem("mobil")) || ([] as any);
  const listaTecnico = JSON.parse(localStorage.getItem("tecnico")) || ([] as any);

  // console.log(listMobil);

  const card = document.getElementById("card");

  var ruta = window.location.pathname; // Devuelve "/reparacion/123"

  // Dividir la ruta en segmentos separados por "/"
  var segmentos = ruta.split("/"); // Devuelve ["", "reparacion", "123"]

  // Obtener el Ãºltimo segmento que es el ID
  var id = segmentos[segmentos.length - 1];

  const params = id.split("-");

  // console.log(params)

  const obtenerMobil = listMobil.filter(
    (element) => element.imei.toString().toLowerCase()  === params[0].toLowerCase()
  );


  const obtenerTecnico = listaTecnico.filter(
    (element) => element.nombre.toLowerCase()  === params[1].toLowerCase()
  );


  window.addEventListener("load", () => {
    // console.log(mobil)

    const newTecnico = new Tecnico(obtenerTecnico[0].nombre, obtenerTecnico.skills);
    // console.log(mobil.autorizacion);
    if (obtenerMobil.autorizacion) {
      card.classList.add("bg-green-400");
    } else {
      card.classList.add("bg-red-400");
    }
  
    // console.log(obtenerMobil[0].marca)

    if (newTecnico.puedeReparar(obtenerMobil[0].marca)) {
      const repuestos = ["pantalla", "flex-audio"];

      const reparacion1 = new Reparacion(obtenerMobil[0], obtenerTecnico[0], repuestos);
      
      console.log(reparacion1); 
      
      $abonoInicial.innerHTML = newTecnico.calcularReparacion(obtenerMobil[0]).toString();
    } else {
      alert("El tecnico no puede reparar esa marca");
    }
  });
</script>
